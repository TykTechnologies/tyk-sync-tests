name: Tyk Sync sync Command
description: This test suite checks if sync command works with Tyk Dashboard
testcases:
  - name: Clear all APIs and Policies
    steps:
      - info: "first dump existing Tyk Dashboard resources"
        script: |
          tyk-sync dump -d "{{ .TYK_URL }}" -s="{{ .TYK_AUTH }}" -t ../test
        assertions:
          - result.code MustEqual 0
      - info: "run clean-apis.sh to clean up resources on Tyk"
        script: |
          TYK_AUTH='{{.TYK_AUTH}}' TYK_URL='{{ .TYK_URL }}' ../clean-apis.sh
        assertions:
          - result.code MustEqual 0
  - name: Verify that no APIs and Policies exist on Dashboard
    steps:
      - info: "verify that no APIs left"
        type: http
        url: '{{ .TYK_URL }}/api/apis'
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        assertions:
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldHaveLength 2
          - result.bodyjson ShouldContainKey apis
          - result.bodyjson ShouldContainKey pages
          - result.bodyjson.apis ShouldHaveLength 0
          - result.bodyjson.pages ShouldEqual 1
      - info: "verify that no Policy left"
        type: http
        url: '{{ .TYK_URL }}/api/portal/policies'
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        assertions:
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldHaveLength 2
          - result.bodyjson ShouldContainKey Data
          - result.bodyjson ShouldContainKey Pages
          - result.bodyjson.Data ShouldHaveLength 0
          - result.bodyjson.Pages ShouldEqual 1
  - name: Check if sync command creates APIs and Policies
    steps:
      - info: "run sync command"
        type: exec
        script: |
          tyk-sync sync -d "{{ .TYK_URL }}" -s="{{ .TYK_AUTH }}" -p ../test
          sleep 1;
      - info: "sync command must recreate all APIs"
        type: http
        method: GET
        url: '{{ .TYK_URL }}/api/apis'
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        retry: 3
        assertions:
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldHaveLength 2
          - result.bodyjson ShouldContainKey apis
          - result.bodyjson ShouldContainKey pages
          - result.bodyjson.apis ShouldHaveLength 10
      - info: "sync command must recreate all Policies"
        type: http
        method: GET
        url: '{{ .TYK_URL }}/api/portal/policies'
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        retry: 3
        assertions:
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldHaveLength 2
          - result.bodyjson ShouldContainKey Data
          - result.bodyjson ShouldContainKey Pages
          - result.bodyjson.Data ShouldHaveLength 5
  - name: Sync multiple specific OAS APIs
    steps:
      - info: "run clean-apis.sh to clean up resources on Tyk"
        script: |
          TYK_AUTH='{{.TYK_AUTH}}' TYK_URL='{{ .TYK_URL }}' ../clean-apis.sh
        assertions:
          - result.code MustEqual 0
      - info: "run sync command with --oas-apis flag"
        type: exec
        script: |
          tyk-sync sync -d "{{ .TYK_URL }}" -s="{{ .TYK_AUTH }}" -p ../test  --oas-apis="test-api-1,test-api-3"
          sleep 1;
      - info: "sync command must recreate two OAS API Definitions"
        type: http
        method: GET
        url: '{{ .TYK_URL }}/api/apis'
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        retry: 3
        assertions:
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldHaveLength 2
          - result.bodyjson ShouldContainKey apis
          - result.bodyjson ShouldContainKey pages
          - result.bodyjson.apis ShouldHaveLength 2
      - info: "sync command must recreate first OAS API Definitions"
        type: http
        method: GET
        url: '{{ .TYK_URL }}/api/apis/oas/test-api-1'
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        retry: 3
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldContainKey "info"
          - result.bodyjson ShouldContainKey "x-tyk-api-gateway"
          - result.bodyjson.x-tyk-api-gateway.info.name ShouldEqual "test-api-1"
      - info: "sync command must recreate second OAS API Definitions"
        type: http
        method: GET
        url: '{{ .TYK_URL }}/api/apis/oas/test-api-3'
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        retry: 3
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldContainKey "info"
          - result.bodyjson ShouldContainKey "x-tyk-api-gateway"
          - result.bodyjson.x-tyk-api-gateway.info.name ShouldEqual "test-api-3"
      - info: "sync command must NOT recreate second OAS API Definitions"
        type: http
        method: GET
        url: '{{ .TYK_URL }}/api/apis/oas/test-api-2'
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        retry: 3
        assertions:
          - result.statuscode ShouldEqual 400
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldContainKey "Status"
          - result.bodyjson ShouldContainKey "Message"
      - info: "sync command should delete non-specified Classic API Definitions"
        type: http
        url: '{{ .TYK_URL }}/api/apis/random-id-1'
        method: GET
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        assertions:
          - result.statuscode ShouldEqual 400
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldContainKey Status
          - result.bodyjson ShouldContainKey Message
      - info: "sync command should delete non-specified Classic API Definitions"
        type: http
        url: '{{ .TYK_URL }}/api/apis/random-id-2'
        method: GET
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        assertions:
          - result.statuscode ShouldEqual 400
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldContainKey Status
          - result.bodyjson ShouldContainKey Message
      - info: "sync command should delete non-specified Classic API Definitions"
        type: http
        url: '{{ .TYK_URL }}/api/apis/random-id-3'
        method: GET
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        assertions:
          - result.statuscode ShouldEqual 400
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldContainKey Status
          - result.bodyjson ShouldContainKey Message
      - info: "sync command should delete non-specified Classic API Definitions"
        type: http
        url: '{{ .TYK_URL }}/api/apis/random-id-3'
        method: GET
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        assertions:
          - result.statuscode ShouldEqual 400
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldContainKey Status
          - result.bodyjson ShouldContainKey Message
      - info: "sync command should delete non-specified Classic API Definitions"
        type: http
        url: '{{ .TYK_URL }}/api/apis/random-id-4'
        method: GET
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        assertions:
          - result.statuscode ShouldEqual 400
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldContainKey Status
          - result.bodyjson ShouldContainKey Message
      - info: "sync command should delete non-specified Classic API Definitions"
        type: http
        url: '{{ .TYK_URL }}/api/apis/random-id-5'
        method: GET
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        assertions:
          - result.statuscode ShouldEqual 400
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldContainKey Status
          - result.bodyjson ShouldContainKey Message
  - name: Sync multiple specific classic APIs
    steps:
      - info: "run clean-apis.sh to clean up resources on Tyk"
        script: |
          TYK_AUTH='{{.TYK_AUTH}}' TYK_URL='{{ .TYK_URL }}' ../clean-apis.sh
        assertions:
          - result.code MustEqual 0
      - info: "run sync command with --oas-apis flag"
        type: exec
        script: |
          tyk-sync sync -d "{{ .TYK_URL }}" -s="{{ .TYK_AUTH }}" -p ../test  --apis="random-id-1,random-id-3"
          sleep 1;
      - info: "sync command must recreate two Classic API Definitions"
        type: http
        method: GET
        url: '{{ .TYK_URL }}/api/apis'
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        retry: 3
        assertions:
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldHaveLength 2
          - result.bodyjson ShouldContainKey apis
          - result.bodyjson ShouldContainKey pages
          - result.bodyjson.apis ShouldHaveLength 2
      - info: "sync command must NOT recreate OAS API Definitions"
        type: http
        method: GET
        url: '{{ .TYK_URL }}/api/apis/oas/test-api-1'
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        retry: 3
        assertions:
          - result.statuscode ShouldEqual 400
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldContainKey "Status"
          - result.bodyjson ShouldContainKey "Message"
      - info: "sync command should create first Classic API Definitions"
        type: http
        url: '{{ .TYK_URL }}/api/apis/random-id-1'
        method: GET
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldContainKey "api_definition"
          - result.bodyjson.api_definition.name ShouldContainSubstring "test-api-1"
      - info: "sync command should create third Classic API Definitions"
        type: http
        url: '{{ .TYK_URL }}/api/apis/random-id-3'
        method: GET
        headers:
          Content-Type: application/json
          Authorization: '{{ .TYK_AUTH }}'
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson ShouldNotBeEmpty
          - result.bodyjson ShouldContainKey "api_definition"
          - result.bodyjson.api_definition.name ShouldContainSubstring "test-api-3"
